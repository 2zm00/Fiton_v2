# Generated by Django 5.1.5 on 2025-01-24 02:49

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('centers', '0001_initial'),
        ('lessons', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FitonUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=20, verbose_name='이름')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profile_images/', verbose_name='프로필 이미지')),
                ('gender', models.CharField(choices=[('Male', '남자'), ('Female', '여자'), ('None', '비공개')], max_length=6, verbose_name='성별')),
                ('role', models.CharField(choices=[('member', '수강생'), ('instructor', '강사'), ('centerowner', '센터장')], max_length=20, verbose_name='역할')),
                ('birth', models.DateField(blank=True, null=True, verbose_name='생년월일')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='전화번호')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CenterOwner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_registration_number', models.CharField(max_length=10, verbose_name='사업자 등록번호')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='사용자 ')),
            ],
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specialties', models.CharField(max_length=255, verbose_name='전문 분야')),
                ('years_of_experience', models.PositiveIntegerField(default=0, verbose_name='경력(년)')),
                ('certifications', models.TextField(blank=True, null=True, verbose_name='자격증')),
                ('rating', models.DecimalField(decimal_places=1, default=0.0, max_digits=2, verbose_name='평균 별점')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='자기소개서')),
                ('center', models.ManyToManyField(related_name='instructors', to='centers.center', verbose_name='등록 센터')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='사용자 ')),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_history', models.ManyToManyField(blank=True, related_name='attended_members', to='lessons.lesson', verbose_name='참여 수업 기록')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='사용자 ')),
            ],
        ),
    ]
